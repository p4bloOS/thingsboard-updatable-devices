{
  "title": "Updatable Devices",
  "image": null,
  "mobileHide": false,
  "mobileOrder": null,
  "configuration": {
    "description": "",
    "widgets": {
      "3d90fb4f-3571-ae2d-6673-b5d23ef91233": {
        "typeFullFqn": "system.horizontal_doughnut",
        "type": "latest",
        "sizeX": 4,
        "sizeY": 2.5,
        "config": {
          "datasources": [
            {
              "type": "device",
              "name": "",
              "deviceId": "d86710a0-2aac-11f0-b628-33cdbd3f7e89",
              "dataKeys": [
                {
                  "name": "memory_free",
                  "type": "timeseries",
                  "label": "Memory free (bytes)",
                  "color": "#08872B",
                  "settings": {},
                  "_hash": 0.8507910738675365
                },
                {
                  "name": "memory_allocated",
                  "type": "timeseries",
                  "label": "Memory allocated (bytes)",
                  "color": "#FF4D5A",
                  "settings": {},
                  "_hash": 0.8759938162908146
                }
              ],
              "alarmFilterConfig": {
                "statusList": [
                  "ACTIVE"
                ]
              }
            }
          ],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1752509622336,
                "endTimeMs": 1752596022336
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": true,
          "backgroundColor": "rgba(0, 0, 0, 0)",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "sortSeries": false,
            "animation": {
              "animation": true,
              "animationThreshold": 2000,
              "animationDuration": 1000,
              "animationEasing": "cubicOut",
              "animationDelay": 0,
              "animationDurationUpdate": 500,
              "animationEasingUpdate": "cubicOut",
              "animationDelayUpdate": 0
            },
            "showLegend": true,
            "legendPosition": "right",
            "legendLabelFont": {
              "family": "Roboto",
              "size": 12,
              "sizeUnit": "px",
              "style": "normal",
              "weight": "400",
              "lineHeight": "16px"
            },
            "legendLabelColor": "rgba(0, 0, 0, 0.38)",
            "legendValueFont": {
              "family": "Roboto",
              "size": 14,
              "sizeUnit": "px",
              "style": "normal",
              "weight": "500",
              "lineHeight": "20px"
            },
            "legendValueColor": "rgba(0, 0, 0, 0.87)",
            "showTooltip": true,
            "tooltipValueType": "percentage",
            "tooltipValueDecimals": 0,
            "tooltipValueFont": {
              "family": "Roboto",
              "size": 13,
              "sizeUnit": "px",
              "style": "normal",
              "weight": "500",
              "lineHeight": "16px"
            },
            "tooltipValueColor": "rgba(0, 0, 0, 0.76)",
            "tooltipBackgroundColor": "rgba(255, 255, 255, 0.76)",
            "tooltipBackgroundBlur": 4,
            "background": {
              "type": "color",
              "color": "#fff",
              "overlay": {
                "enabled": false,
                "color": "rgba(255,255,255,0.72)",
                "blur": 3
              }
            },
            "padding": "12px",
            "layout": "default",
            "autoScale": true,
            "clockwise": false,
            "totalValueFont": {
              "family": "Roboto",
              "size": 24,
              "sizeUnit": "px",
              "style": "normal",
              "weight": "500",
              "lineHeight": "1"
            },
            "totalValueColor": {
              "type": "constant",
              "color": "rgba(0, 0, 0, 0.87)",
              "colorFunction": "var temperature = value;\nif (typeof temperature !== undefined) {\n  var percent = (temperature + 60)/120 * 100;\n  return tinycolor.mix('blue', 'red', percent).toHexString();\n}\nreturn 'blue';"
            }
          },
          "title": "Memoria de dispositivo ESP-32 con Micropython",
          "dropShadow": true,
          "enableFullscreen": true,
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "units": null,
          "decimals": 0,
          "useDashboardTimewindow": true,
          "showLegend": false,
          "widgetStyle": {},
          "actions": {
            "headerButton": []
          },
          "configMode": "basic",
          "displayTimewindow": true,
          "margin": "0px",
          "borderRadius": "0px",
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showTitleIcon": false,
          "titleTooltip": "",
          "titleFont": {
            "size": 16,
            "sizeUnit": "px",
            "family": "Roboto",
            "weight": "500",
            "style": "normal",
            "lineHeight": "24px"
          },
          "titleIcon": "donut_large",
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "timewindowStyle": {
            "showIcon": false,
            "iconSize": "24px",
            "icon": null,
            "iconPosition": "left",
            "font": {
              "size": 12,
              "sizeUnit": "px",
              "family": "Roboto",
              "weight": "400",
              "style": "normal",
              "lineHeight": "16px"
            },
            "color": "rgba(0, 0, 0, 0.38)",
            "displayTypePrefix": true
          },
          "titleColor": "rgba(0, 0, 0, 0.87)"
        },
        "row": 0,
        "col": 0,
        "id": "3d90fb4f-3571-ae2d-6673-b5d23ef91233"
      },
      "5781cdb3-1ef5-816a-d227-efe84f95b657": {
        "typeFullFqn": "system.command_button",
        "type": "rpc",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "showTitle": false,
          "backgroundColor": "rgba(255, 255, 255, 0)",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "onClickState": {
              "action": "EXECUTE_RPC",
              "executeRpc": {
                "method": "garbage_collection",
                "requestTimeout": 5000,
                "requestPersistent": false,
                "persistentPollingInterval": 1000
              },
              "setAttribute": {
                "scope": "SERVER_SCOPE",
                "key": "state"
              },
              "putTimeSeries": {
                "key": "state"
              },
              "valueToData": {
                "type": "NONE",
                "constantValue": true,
                "valueToDataFunction": "/* Return RPC parameters or attribute/time-series value */\nreturn true;"
              }
            },
            "disabledState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "getAlarmStatus": {
                "severityList": null,
                "typeList": null
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "appearance": {
              "type": "outlined",
              "showLabel": true,
              "label": "Enviar comando remoto \"Garbage collection\"",
              "showIcon": true,
              "icon": "arrow_outward",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#3F52DD",
              "backgroundColor": "#FFFFFF",
              "autoScale": true,
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Command button",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "actions": {},
          "widgetCss": "",
          "noDataDisplayMessage": "",
          "titleFont": {
            "size": 12,
            "sizeUnit": "px",
            "family": null,
            "weight": null,
            "style": null,
            "lineHeight": "1.6"
          },
          "showTitleIcon": false,
          "titleTooltip": "",
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "pageSize": 1024,
          "titleIcon": "",
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "14px",
          "configMode": "basic",
          "borderRadius": "4px",
          "datasources": [],
          "targetDevice": {
            "type": "device",
            "deviceId": "d86710a0-2aac-11f0-b628-33cdbd3f7e89"
          }
        },
        "row": 0,
        "col": 0,
        "id": "5781cdb3-1ef5-816a-d227-efe84f95b657"
      },
      "0a1a4298-2c53-29cc-b72a-d6280f75a45a": {
        "type": "latest",
        "sizeX": 7.5,
        "sizeY": 6.5,
        "config": {
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 86400000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1694085363133,
                "endTimeMs": 1694171763133
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "NONE",
              "limit": 200
            }
          },
          "showTitle": true,
          "backgroundColor": "rgb(255, 255, 255)",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "4px",
          "settings": {
            "entitiesTitle": "Devices",
            "enableSearch": true,
            "enableSelectColumnDisplay": false,
            "enableStickyHeader": true,
            "enableStickyAction": false,
            "showCellActionsMenu": true,
            "reserveSpaceForHiddenAction": "true",
            "displayEntityName": true,
            "entityNameColumnTitle": "Device",
            "displayEntityLabel": false,
            "entityLabelColumnTitle": "",
            "displayEntityType": false,
            "displayPagination": true,
            "defaultPageSize": 1,
            "pageStepCount": 3,
            "pageStepIncrement": 1,
            "defaultSortOrder": "entityName",
            "useRowStyleFunction": false,
            "rowStyleFunction": ""
          },
          "title": "New Entities table",
          "dropShadow": true,
          "enableFullscreen": true,
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400,
            "padding": "5px 10px 5px 10px"
          },
          "useDashboardTimewindow": false,
          "showLegend": false,
          "datasources": [
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "adeacaa7-dc07-b7f3-38dc-c400ead10e4a",
              "filterId": "930f802c-db78-ee41-1e96-f63bc0a9c08a",
              "dataKeys": [
                {
                  "name": "current_fw_title",
                  "type": "timeseries",
                  "label": "Current FW title",
                  "color": "#2196f3",
                  "settings": {
                    "columnWidth": "0px",
                    "useCellStyleFunction": false,
                    "cellStyleFunction": "",
                    "useCellContentFunction": false,
                    "defaultColumnVisibility": "visible",
                    "columnSelectionToDisplay": "enabled"
                  },
                  "_hash": 0.09545533885166413,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "current_fw_version",
                  "type": "timeseries",
                  "label": "Current FW version",
                  "color": "#4caf50",
                  "settings": {
                    "columnWidth": "0px",
                    "useCellStyleFunction": false,
                    "cellStyleFunction": "",
                    "useCellContentFunction": false,
                    "defaultColumnVisibility": "visible",
                    "columnSelectionToDisplay": "enabled"
                  },
                  "_hash": 0.7206056602328659,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "target_fw_title",
                  "type": "timeseries",
                  "label": "Target FW title",
                  "color": "#ffc107",
                  "settings": {
                    "columnWidth": "0px",
                    "useCellStyleFunction": false,
                    "cellStyleFunction": "",
                    "useCellContentFunction": false,
                    "defaultColumnVisibility": "visible",
                    "columnSelectionToDisplay": "enabled"
                  },
                  "_hash": 0.9934225682766313,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "target_fw_version",
                  "type": "timeseries",
                  "label": "Target FW version",
                  "color": "#607d8b",
                  "settings": {
                    "columnWidth": "0px",
                    "useCellStyleFunction": false,
                    "cellStyleFunction": "",
                    "useCellContentFunction": false,
                    "cellContentFunction": "",
                    "defaultColumnVisibility": "visible",
                    "columnSelectionToDisplay": "enabled"
                  },
                  "_hash": 0.5251724416842531,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "target_fw_ts",
                  "type": "timeseries",
                  "label": "Target FW set time",
                  "color": "#e91e63",
                  "settings": {
                    "columnWidth": "0px",
                    "useCellStyleFunction": false,
                    "cellStyleFunction": "",
                    "useCellContentFunction": true,
                    "defaultColumnVisibility": "visible",
                    "columnSelectionToDisplay": "enabled",
                    "cellContentFunction": "if (value !== '') {\n    return ctx.date.transform(value, 'yyyy-MM-dd HH:mm:ss');\n}\nreturn '';"
                  },
                  "_hash": 0.31823244858578237,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "fw_state",
                  "type": "timeseries",
                  "label": "Progress",
                  "color": "#9c27b0",
                  "settings": {
                    "columnWidth": "30%",
                    "useCellStyleFunction": true,
                    "useCellContentFunction": true,
                    "defaultColumnVisibility": "visible",
                    "columnSelectionToDisplay": "enabled",
                    "cellStyleFunction": "return {\n    'padding-right': '30px'\n}",
                    "cellContentFunction": "if (value !== '') {\n    var mapProgress = {\n        'QUEUED': 0,\n        'INITIATED': 5,\n        'DOWNLOADING': 10,\n        'DOWNLOADED': 55,\n        'VERIFIED': 60,\n        'UPDATING': 70,\n        'FAILED': 99,\n        'UPDATED': 100\n    }\n    var color = 'mat-primary';\n    var progress = mapProgress[value];\n    if (value == 'FAILED') {\n        color = 'mat-accent';\n    }\n    return `<mat-progress-bar style=\"height: 8px\" role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\" tabindex=\"-1\" mode=\"determinate\" value=\"${progress}\" class=\"mat-progress-bar ${color}\" aria-valuenow=\"${progress}\"><div aria-hidden=\"true\"><svg width=\"100%\" height=\"8\" focusable=\"false\" class=\"mat-progress-bar-background mat-progress-bar-element\"><defs><pattern x=\"4\" y=\"0\" width=\"8\" height=\"4\" patternUnits=\"userSpaceOnUse\" id=\"mat-progress-bar-0\"><circle cx=\"2\" cy=\"2\" r=\"2\"></circle></pattern></defs><rect width=\"100%\" height=\"100%\" fill=\"url(\"/components/progress-bar/overview#mat-progress-bar-0\")\"></rect></svg><div class=\"mat-progress-bar-buffer mat-progress-bar-element\"></div><div class=\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\" style=\"transform: scale3d(${progress / 100}, 1, 1);\"></div><div class=\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\"></div></div></mat-progress-bar>`;\n}"
                  },
                  "_hash": 0.8174211757846257,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "fw_state",
                  "type": "timeseries",
                  "label": "Status",
                  "color": "#f44336",
                  "settings": {
                    "columnWidth": "130px",
                    "useCellStyleFunction": true,
                    "useCellContentFunction": true,
                    "defaultColumnVisibility": "visible",
                    "columnSelectionToDisplay": "enabled",
                    "cellStyleFunction": "if (value == 'FAILED') {\n    return {'color' : '#D93025'};\n}\nreturn {};",
                    "cellContentFunction": "function icon(value) {\n    if (value == 'QUEUED') {\n        return '<mat-icon _role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color\" aria-hidden=\"true\" data-mat-icon-type=\"font\" style=\"color: #000;\"><svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M6,2V8H6V8L10,12L6,16V16H6V22H18V16H18V16L14,12L18,8V8H18V2H6M16,16.5V20H8V16.5L12,12.5L16,16.5M12,11.5L8,7.5V4H16V7.5L12,11.5Z\" /></svg></mat-icon>';\n    }\n    if (value == 'INITIATED' || value == 'DOWNLOADING' || value == 'DOWNLOADED') {\n        return '<mat-icon _role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color\" aria-hidden=\"true\" data-mat-icon-type=\"font\" style=\"color: #000\"><svg viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12.74 2.1951C11.63 1.2876 10.2575 0.687598 8.75 0.537598V2.0526C9.845 2.1876 10.8425 2.6226 11.675 3.2676L12.74 2.1951ZM13.9475 7.2501H15.4625C15.3125 5.7426 14.7125 4.3701 13.805 3.2601L12.7325 4.3251C13.3775 5.1576 13.8125 6.1551 13.9475 7.2501ZM12.7325 11.6751L13.805 12.7476C14.7125 11.6376 15.3125 10.2576 15.4625 8.7576H13.9475C13.8125 9.8451 13.3775 10.8426 12.7325 11.6751ZM8.75 13.9476V15.4626C10.2575 15.3126 11.63 14.7126 12.74 13.8051L11.6675 12.7326C10.8425 13.3776 9.845 13.8126 8.75 13.9476ZM8.75 8.0001V4.2501H7.25V8.0001H4.25L8 11.7501L11.75 8.0001H8.75ZM7.25 13.9476V15.4626C3.4625 15.0876 0.5 11.8926 0.5 8.0001C0.5 4.1076 3.4625 0.912598 7.25 0.537598V2.0526C4.2875 2.4201 2 4.9401 2 8.0001C2 11.0601 4.2875 13.5801 7.25 13.9476Z\" fill=\"black\"/></svg></mat-icon>';\n    }\n    if (value == 'VERIFIED' || value == 'UPDATING' ) {\n        return '<mat-icon _role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color\" aria-hidden=\"true\" data-mat-icon-type=\"font\" style=\"color: #000\">update</mat-icon>';\n    }\n    if (value == 'UPDATED') {\n        return '<mat-icon _role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color\" aria-hidden=\"true\" data-mat-icon-type=\"font\" style=\"color: #000\"><svg style=\"width:22px;height:22px\" viewBox=\"0 0 34 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M33.26 2.82L30.44 0L12.06 18.38L3.55999 9.9L0.73999 12.72L12.06 24.04L33.26 2.82Z\" fill=\"black\"/><path d=\"M31 28H3V32H31V28Z\" fill=\"black\"/></svg></mat-icon>';\n    }\n    if (value == 'FAILED') {\n        return '<mat-icon _role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color\" aria-hidden=\"true\" data-mat-icon-type=\"font\" style=\"color: #D93025\">warning</mat-icon>';\n    }\n    return '';\n}\nfunction capitalize (s) {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1).toLowerCase();\n}\n\nreturn icon(value) + '<span style=\"vertical-align: super;padding-left: 8px;\">' + capitalize(value) + '</span>';"
                  },
                  "_hash": 0.7764426948615217,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "fw_checksum",
                  "type": "attribute",
                  "label": "fw_checksum",
                  "color": "#3f51b5",
                  "settings": {
                    "columnWidth": "0px",
                    "useCellStyleFunction": false,
                    "cellStyleFunction": "",
                    "useCellContentFunction": false,
                    "defaultColumnVisibility": "hidden",
                    "columnSelectionToDisplay": "disabled"
                  },
                  "_hash": 0.5594087842471693,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "fw_url",
                  "type": "attribute",
                  "label": "fw_url",
                  "color": "#e91e63",
                  "settings": {
                    "columnWidth": "0px",
                    "useCellStyleFunction": false,
                    "cellStyleFunction": "",
                    "useCellContentFunction": false,
                    "cellContentFunction": "",
                    "defaultColumnVisibility": "hidden",
                    "columnSelectionToDisplay": "disabled"
                  },
                  "_hash": 0.4204673738685043,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                }
              ]
            }
          ],
          "actions": {
            "actionCellButton": [
              {
                "name": "History firmware update",
                "icon": "history",
                "type": "openDashboardState",
                "targetDashboardStateId": "device_firmware_history",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "dialogTitle": "",
                "dialogHideDashboardToolbar": true,
                "dialogWidth": null,
                "dialogHeight": null,
                "openRightLayout": false,
                "id": "98a1406c-3301-bc2f-2c5d-d637ce3b663b"
              },
              {
                "name": "Edit firmware",
                "icon": "edit",
                "type": "customPretty",
                "customHtml": "<form #editEntityForm=\"ngForm\" [formGroup]=\"editEntityFormGroup\"\n      (ngSubmit)=\"save()\"  class=\"edit-entity-form\">\n  <mat-toolbar class=\"flex flex-row\" color=\"primary\">\n    <h2>Edit firmware {{entityName}}</h2>\n    <span class=\"flex-1\"></span>\n    <button mat-icon-button (click)=\"cancel()\" type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n  </mat-toolbar>\n  <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n  </mat-progress-bar>\n  <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n  <div *ngIf=\"entity.deviceProfileId\" mat-dialog-content class=\"flex flex-col\">\n    <tb-ota-package-autocomplete\n        [useFullEntityId]=\"true\"\n        [deviceProfileId]=\"entity.deviceProfileId.id\"\n        formControlName=\"firmwareId\">\n    </tb-ota-package-autocomplete>\n  </div>\n  <div mat-dialog-actions class=\"flex flex-row items-center justify-end\">\n    <button mat-button color=\"primary\"\n            type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button mat-button mat-raised-button color=\"primary\"\n            type=\"submit\"\n            [disabled]=\"(isLoading$ | async) || editEntityForm.invalid || !editEntityForm.dirty\">\n      Save\n    </button>\n  </div>\n</form>",
                "customCss": "form {\n    min-width: 300px !important;\n}",
                "customFunction": "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet entityService = $injector.get(widgetContext.servicesMap.get('entityService'));\nlet deviceService = $injector.get(widgetContext.servicesMap.get('deviceService'));\n\nopenEditEntityDialog();\n\nfunction openEditEntityDialog() {\n    customDialog.customDialog(htmlTemplate, EditEntityDialogController).subscribe();\n}\n\nfunction EditEntityDialogController(instance) {\n    let vm = instance;\n\n    vm.entityName = entityName;\n    vm.entity = {};\n\n    vm.editEntityFormGroup = vm.fb.group({\n        firmwareId: [null]\n    });\n\n    getEntityInfo();\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n    vm.save = function() {\n        vm.editEntityFormGroup.markAsPristine();\n        saveEntity().subscribe(\n            function () {\n                // widgetContext.updateAliases();\n                vm.dialogRef.close(null);\n            }\n        );\n    };\n\n\n    function getEntityInfo() {\n        entityService.getEntity(entityId.entityType, entityId.id).subscribe(\n            function (data) {\n                vm.entity = data;\n                vm.editEntityFormGroup.patchValue({\n                    firmwareId: vm.entity.firmwareId\n                }, {emitEvent: false});\n            }\n        );\n    }\n\n    function saveEntity() {\n        const formValues = vm.editEntityFormGroup.value;\n        vm.entity.firmwareId = formValues.firmwareId;\n        return deviceService.saveDevice(vm.entity);\n    }\n}",
                "customResources": [],
                "id": "23099c1d-454b-25dc-8bc0-7cf33c21c5d5"
              },
              {
                "name": "Download firmware",
                "icon": "file_download",
                "type": "custom",
                "customFunction": "let $injector = widgetContext.$scope.$injector;\nlet entityService = $injector.get(widgetContext.servicesMap.get('entityService'));\nlet otaPackageService = $injector.get(widgetContext.servicesMap.get('otaPackageService'));\nlet deviceProfileService = $injector.get(widgetContext.servicesMap.get('deviceProfileService'));\n\ngetDeviceFirmware();\n\nfunction getDeviceFirmware() {\n    var entityIdValue = entityId.id;\n    var data = widgetContext.data.find((el) => el.datasource.entityId === entityIdValue && el.dataKey.name === 'fw_url');\n    var url = data.data[0][1];\n    if (url === '') {\n        entityService.getEntity(entityId.entityType, entityId.id).subscribe(\n            function (data) {\n                if (data.firmwareId !== null) {\n                    otaPackageService.downloadOtaPackage(data.firmwareId.id).subscribe();    \n                } else {\n                    deviceProfileService.getDeviceProfile(data.deviceProfileId.id).subscribe(\n                        function (deviceProfile) {\n                            if (deviceProfile.firmwareId !== null) {\n                                otaPackageService.downloadOtaPackage(deviceProfile.firmwareId.id).subscribe();\n                            } else {\n                                widgetContext.showToast('warn', 'Device ' + entityName +' has not firmware set.', 2000, 'top');\n                            }\n                    });\n                }\n            }\n        );\n    } else {\n        widgetContext.showToast('warn', 'Device ' + entityName +' has not firmware set.', 2000, 'top');\n    }\n}",
                "id": "12533058-42f6-e75f-620c-219c48d01ec0"
              },
              {
                "name": "Copy checksum/URL",
                "icon": "content_copy",
                "type": "custom",
                "customFunction": "function copyToClipboard(text) {\n    if (window.clipboardData && window.clipboardData.setData) {\n        return window.clipboardData.setData(\"Text\", text);\n\n    }\n    else if (document.queryCommandSupported && document.queryCommandSupported(\"copy\")) {\n        var textarea = document.createElement(\"textarea\");\n        textarea.textContent = text;\n        textarea.style.position = \"fixed\";\n        document.body.appendChild(textarea);\n        textarea.select();\n        try {\n            return document.execCommand(\"copy\");\n        }\n        catch (ex) {\n            console.warn(\"Copy to clipboard failed.\", ex);\n            return false;\n        }\n        document.body.removeChild(textarea);\n    }\n}\nvar entityIdValue = entityId.id;\nvar data = widgetContext.data.find((el) => el.datasource.entityId === entityIdValue && el.dataKey.name === 'fw_checksum');\nvar checksum = data.data[0][1];\nif (checksum !== '') {\n    copyToClipboard(checksum);\n    widgetContext.showSuccessToast('Firmware checksum has been copied to clipboard', 2000, 'top');\n} else {\n    data = widgetContext.data.find((el) => el.datasource.entityId === entityIdValue && el.dataKey.name === 'fw_url');\n    var url = data.data[0][1];\n    if (url !== '') {\n        copyToClipboard(url);\n        widgetContext.showSuccessToast('Firmware direct URL has been copied to clipboard', 2000, 'top');\n    } else {\n        widgetContext.showToast('warn', 'Device ' + entityName +' has not firmware set.', 2000, 'top');\n    }\n}",
                "id": "09323079-7111-87f7-90d1-c62cd7d85dc7"
              }
            ]
          },
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "widgetStyle": {}
        },
        "row": 0,
        "col": 0,
        "id": "0a1a4298-2c53-29cc-b72a-d6280f75a45a",
        "typeFullFqn": "system.cards.entities_table"
      }
    },
    "states": {
      "default": {
        "name": "Updatable Devices",
        "root": true,
        "layouts": {
          "main": {
            "widgets": {
              "3d90fb4f-3571-ae2d-6673-b5d23ef91233": {
                "sizeX": 8,
                "sizeY": 4,
                "row": 0,
                "col": 0
              },
              "5781cdb3-1ef5-816a-d227-efe84f95b657": {
                "sizeX": 8,
                "sizeY": 1,
                "row": 4,
                "col": 0
              },
              "0a1a4298-2c53-29cc-b72a-d6280f75a45a": {
                "sizeX": 19,
                "sizeY": 4,
                "row": 5,
                "col": 0
              }
            },
            "gridSettings": {
              "layoutType": "default",
              "backgroundColor": "#eeeeee",
              "columns": 24,
              "margin": 10,
              "outerMargin": true,
              "backgroundSizeMode": "100%"
            }
          }
        }
      }
    },
    "entityAliases": {
      "adeacaa7-dc07-b7f3-38dc-c400ead10e4a": {
        "id": "adeacaa7-dc07-b7f3-38dc-c400ead10e4a",
        "alias": "All devices",
        "filter": {
          "type": "entityType",
          "resolveMultiple": true,
          "entityType": "DEVICE"
        }
      }
    },
    "filters": {
      "930f802c-db78-ee41-1e96-f63bc0a9c08a": {
        "id": "930f802c-db78-ee41-1e96-f63bc0a9c08a",
        "filter": "DeviceSearch",
        "keyFilters": [
          {
            "key": {
              "type": "ENTITY_FIELD",
              "key": "name"
            },
            "valueType": "STRING",
            "predicates": [
              {
                "keyFilterPredicate": {
                  "operation": "CONTAINS",
                  "value": {
                    "defaultValue": ""
                  },
                  "ignoreCase": true,
                  "type": "STRING"
                },
                "userInfo": {
                  "editable": true,
                  "label": "Device name",
                  "autogeneratedLabel": false,
                  "order": 0
                }
              }
            ]
          }
        ],
        "editable": true
      }
    },
    "timewindow": {
      "displayValue": "",
      "hideAggregation": false,
      "hideAggInterval": false,
      "hideTimezone": false,
      "selectedTab": 0,
      "realtime": {
        "realtimeType": 0,
        "interval": 1000,
        "timewindowMs": 60000,
        "quickInterval": "CURRENT_DAY",
        "hideInterval": false,
        "hideLastInterval": false,
        "hideQuickInterval": false
      },
      "history": {
        "historyType": 0,
        "interval": 1000,
        "timewindowMs": 60000,
        "fixedTimewindow": {
          "startTimeMs": 1752509597935,
          "endTimeMs": 1752595997935
        },
        "quickInterval": "CURRENT_DAY",
        "hideInterval": false,
        "hideLastInterval": false,
        "hideFixedInterval": false,
        "hideQuickInterval": false
      },
      "aggregation": {
        "type": "AVG",
        "limit": 25000
      }
    },
    "settings": {
      "stateControllerId": "entity",
      "showTitle": false,
      "showDashboardsSelect": true,
      "showEntitiesSelect": true,
      "showDashboardTimewindow": true,
      "showDashboardExport": true,
      "toolbarAlwaysOpen": true
    }
  },
  "name": "Updatable Devices",
  "resources": []
}